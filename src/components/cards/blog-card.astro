---
import { formatDate } from '$utils/date-formatter'
import { getReadingTime } from '$utils/reading-time'
import { Icon } from 'astro-icon/components'
import type { CollectionEntry } from 'astro:content'
import { getEntry } from 'astro:content'

interface Props {
	post: CollectionEntry<'posts'>
}

const { post } = Astro.props
const category = await getEntry(post.data.category)

const pathname = new URL(post.slug, Astro.site).pathname
---

<a
	href={pathname}
	class="group flex h-full flex-col justify-between gap-4 overflow-hidden rounded-md border border-b-4 border-highlight bg-card p-4 pb-2 transition-colors duration-150 ease-in-out hover:border-b-category-highlight hover:bg-card-hover"
	data-type={category.data.name.toLowerCase()}
>
	<div class="space-y-4">
		<div class="flex flex-col justify-between gap-2" transition:name={post.data.title}>
			<span
				class="inline-flex self-start rounded-md bg-category p-2 text-lg font-bold tracking-wide opacity-90"
			>
				<Icon name={category.data.icon} class="text-icon" />
			</span>
			<h2 class="font-heading font-semibold tracking-wider">
				{post.data.title}
			</h2>
		</div>
	</div>

	<div class="mt-auto space-y-2">
		<p class="text-body-low-contrast">
			{post.data.description}
		</p>
		<div class="flex justify-between border-t border-highlight pt-2 font-mono text-sm">
			<time class="text-datetime-text">{formatDate(post.data.published_time)}</time>
			<span>{getReadingTime(post.body)}</span>
		</div>
	</div>
</a>
