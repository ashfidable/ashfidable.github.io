---
import HeroSection from '$components/hero-section.astro'
import BaseLayout from '$layouts/base-layout.astro'
import { getCollection } from 'astro:content'
import SnippetCard from '$components/cards/snippet-card.astro'
import type { CollectionEntry } from 'astro:content'
import BaseSeo from '$components/base-seo.astro'

const snippets = await getCollection('posts', ({ id }) => {
	return id.startsWith('snippets/')
})

const filteredSnippets = snippets.sort(
	(a, b) => a.data.published_time.getTime() - b.data.published_time.getTime()
)

const groupedByYear: { [year: string]: CollectionEntry<'posts'>[] } = {}

for (const item of filteredSnippets) {
	const year = item.data.published_time.getFullYear()
	if (!groupedByYear[year]) {
		groupedByYear[year] = [item]
	} else {
		groupedByYear[year].push(item)
	}
}

const snippetsCount = snippets.length
---

<BaseLayout>
	<Fragment slot="seo">
		<BaseSeo
			title="Snippets"
			description="Useful snippets that I use a lot or found really helpful on Internet."
			type="website"
		/>
	</Fragment>

	<HeroSection title="Snippets ðŸ“’">
		<p class="font-bold">Useful snippets that I use a lot or found really helpful on Internet.</p>
		<p>
			So far, I have posted <strong>{snippetsCount}</strong>
			{snippetsCount > 1 ? 'snippets' : 'snippet'}.
		</p>
	</HeroSection>

	{
		Object.keys(groupedByYear)
			.reverse()
			.map((year) => {
				const snippets = groupedByYear[year]
				return (
					<section class="flex flex-col gap-4">
						<h2 class="font-heading text-xl font-bold">{year}</h2>
						<div class="space-y-4">
							{snippets.map((snippet) => (
								<SnippetCard snippet={snippet} />
							))}
						</div>
					</section>
				)
			})
	}
</BaseLayout>
